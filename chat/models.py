from django.db import models
import uuid
from campaign_trigger.models import ActionTrigger,TriggerActionCampaign
from call.models import CallsHistories
# Create your models here.


class Chats(models.Model):
    id = models.AutoField(primary_key=True)
    uid = models.CharField(max_length=200, default=uuid.uuid4, unique=True)
    call_id = models.CharField(max_length=45, blank=True, null=True)
    call_type = models.CharField(max_length=1000, blank=True, null=True)
    app_id = models.IntegerField(blank=True, null=True)
    chat_status = models.CharField(max_length=1000, blank=True, null=True)
    job_id = models.IntegerField(blank=True, null=True)
    client_id = models.IntegerField(blank=True, null=True)
    recruiter_id = models.IntegerField(blank=True, null=True)
    candidate_id = models.IntegerField()
    repetition = models.IntegerField(blank=True, null=True)
    question = models.CharField(max_length=45, blank=True, null=True)
    created_at = models.DateTimeField(blank=True, null=True)
    updated_at = models.DateTimeField(blank=True, null=True)
    conversation = models.TextField(blank=True, null=True)
    last_question = models.TextField( blank=True, null=True)
    custom_data = models.TextField( blank=True, null=True)
    mobile = models.CharField(max_length=15, blank=True, null=True)
    disconnect_data = models.TextField( blank=True, null=True)
    is_completed = models.IntegerField(blank=True, null=True)
    is_sync = models.IntegerField(blank=True, null=True)
    call_credit = models.IntegerField(blank=True, null=True)
    is_processed = models.IntegerField(blank=True, null=True)
    hours = models.IntegerField(blank=True, null=True)
    latter = models.DateTimeField(blank=True, null=True)
    hangup = models.CharField(max_length=45, blank=True, null=True)
    interview = models.CharField(max_length=45, blank=True, null=True)
    islater = models.IntegerField(blank=True, null=True)
    video_link = models.CharField(max_length=1000, blank=True, null=True)
    disposition = models.CharField(max_length=100, blank=True, null=True)
    audio_to_text = models.TextField(blank=True, null=True)
    chat_rating = models.CharField(max_length=45, blank=True, null=True)
    video_link2 = models.CharField(max_length=500, blank=True, null=True)
    campaign_name = models.CharField(max_length=100, blank=True, null=True)
    gram_check_text = models.TextField(blank=True, null=True)
    gram_check_perc = models.FloatField(blank=True, null=True)
    avg_rating = models.FloatField(blank=True, null=True)
    gram_check_text_2 = models.TextField(blank=True, null=True)
    gram_check_perc2 = models.FloatField(blank=True, null=True)
    skill1 = models.IntegerField(blank=True, null=True)
    skill2 = models.IntegerField(blank=True, null=True)
    skill3 = models.IntegerField(blank=True, null=True)
    chat_conv_done = models.IntegerField(blank=True, null=True)
    device_name = models.CharField(max_length=45, blank=True, null=True)
    browser_name = models.CharField(max_length=4500, blank=True, null=True)
    tab_opened = models.IntegerField(blank=True, null=True)
    link_opened = models.IntegerField(blank=True, null=True)
    target_months = models.IntegerField(blank=True, null=True)
    link_open_count = models.IntegerField(blank=True, null=True)
    chat_start_time = models.DateTimeField(blank=True, null=True)
    chat_end_time = models.DateTimeField(blank=True, null=True)
    sms_link_open_count = models.IntegerField(blank=True, null=True)
    email_link_open_count = models.IntegerField(blank=True, null=True)
    chat_link_open_time = models.DateTimeField(blank=True, null=True)
    completedbychat = models.CharField(db_column='CompletedByChat', max_length=15, blank=True, null=True)  # Field name made lowercase.
    refresh_count = models.IntegerField(blank=True, null=True)
    other_slots = models.CharField(max_length=2000 ,blank=True, null=True )
    campaign_trigger_history = models.ForeignKey(TriggerActionCampaign, on_delete=models.SET_NULL, blank=True,null=True)
    campaign_trigger = models.ForeignKey(ActionTrigger, on_delete=models.SET_NULL, blank=True,null=True)
    call_history = models.ForeignKey(CallsHistories, on_delete=models.SET_NULL, blank=True,null=True)
    is_update = models.IntegerField(blank=True, null=True)
    class Meta:
        managed = True
        db_table = 'chats'